services:

  my_postgres_db:           # Nom du mon premier service

    image: postgres:14
    # Utilise l'image officielle PostgreSQL version 14 comme base pour ce service

    restart: on-failure:5
    # Redémarre le conteneur automatiquement jusqu'à 5 fois si le conteneur quitte avec un code d'erreur

    container_name: ${BDD_NAME}
    # Définit un nom spécifique pour le conteneur, en utilisant une variable d'environnement pour le préfixe

    env_file:
      - .env
    # Charge les variables d'environnement définies dans le fichier .env situé dans le même dossier que docker-compose.yml

    environment:
      POSTGRES_DB: ${POSTGRES_DBNAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    # Définit des variables d'environnement spécifiques pour configurer le serveur PostgreSQL

    ports:
      - "${POSTGRES_PORT}:5432"
    # Expose le port 5432 du conteneur sur un port spécifié par la variable d'environnement POSTGRES_PORT du système hôte

    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Montage d'un volume pour persister les données de PostgreSQL, mappé à un répertoire spécifique dans le conteneur
    # celà indique que le volume nommé postgres_data est monté dans le conteneur à l'emplacement /var/lib/postgresql/data.
    # Ce chemin est crucial pour PostgreSQL car il est utilisé pour stocker les données de la base de données de manière persistante.
    # Sans ce mappage, toutes les données seraient perdues lorsque le conteneur serait détruit.

  mage_ai:

    env_file:
      - .env
    # Charge les variables d'environnement du fichier .env, comme pour le service PostgreSQL
    container_name: ${CONT_1_NAME}

    build:
      context: .
      dockerfile: Dockerfile
    # Construit l'image de l'application à partir du Dockerfile situé dans le même répertoire que docker-compose.yml

    environment:
      ENV: ${ENV}
      POSTGRES_DBNAME: ${POSTGRES_DBNAME}
      POSTGRES_SCHEMA: ${POSTGRES_SCHEMA}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    # Définit des variables d'environnement utilisées par l'application mage_ai pour se connecter et interagir avec la base de données

    ports:
      - "6789:6789"
    # Expose le port 6789 du conteneur sur le port 6789 du système hôte, utilisé typiquement par l'application pour l'interface web ou API

    volumes:
      - .:/app
    # Montage d'un volume pour le code source de l'application, synchronisant le répertoire courant avec le répertoire /app dans le conteneur

    depends_on:
      - my_postgres_db
    # Spécifie que ce service dépend du service my_postgres_db, assurant que PostgreSQL soit démarré avant que mage_ai commence

volumes:
  postgres_data: {}
  # Définit un volume nommé pour la persistance des données PostgreSQL qui est utilisé par le service my_postgres_db
  # la déclaration explicite est une bonne pratique, surtout pour la clarté,
  # la gestion des versions de docker-compose et lorsque vous utilisez des volumes avec des configurations spéciales ou des options de pilote.
